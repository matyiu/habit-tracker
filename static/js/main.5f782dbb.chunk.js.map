{"version":3,"sources":["components/InputWrapper.js","components/Select.js","utils/animationEffects.js","HabitForm.js","storage/habit.js","components/calendar/CalendarUtils.js","components/calendar/SuccessMark.js","components/Habit.js","components/dropdown/Dropdown.js","components/dropdown/HabitOptions.js","components/dropdown/HabitDayMenu.js","components/dropdown/dropdownUtils.js","components/habit/HabitList.js","App.js","index.js"],"names":["InputWrapper","props","className","title","children","Select","style","width","onChange","value","slideToggle","elm","ms","offsetHeight","height","display","overflow","targetHeight","scrollHeight","clientTop","anime","targets","easing","duration","finished","then","formatDate","date","format","locale","month","LocaleUtils","formatMonthTitle","getDate","parseDate","str","matchedGroups","match","day","Number","year","Date","setHours","setDate","setMonth","getMonths","indexOf","setFullYear","HabitForm","state","open","name","type","startDate","undefined","habitList","storage","minHeight","overlay","React","createRef","toggle","bind","submit","e","this","target","current","habitFormOptions","setState","options","id","setId","update","add","click","clearForm","habit","get","data-state","placeholder","onFocus","ref","dayPickerProps","inputProps","readOnly","onDayChange","pattern","inputMode","onClick","Component","HabitList","habits","localStorage","getItem","JSON","parse","forEach","dayStates","Array","map","_newId","_newHabitData","push","save","setItem","stringify","filter","updatedHabit","Object","assign","index","getDay","startDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","findDay","getTime","getWeekCompletedGroups","weekDates","limits","endDate","completedDays","dayState","completedGroupsList","currentCompletedGroup","dates","before","after","find","completedDay","length","firstGroup","limit","prevDay","Boolean","checkPreviousWeekCompletedDay","lastGroup","nextDay","checkNextWeekCompletedDay","SuccessMark","completedGroup","rowWidth","parent","offsetWidth","cellWidth","coords","MIDDLE_POINT_WIDTH","left","Habit","windowSize","habitToggle","setActiveHabit","resizeHandler","today","calendarBody","habitBody","displayDayMenu","habitOptions","setDay","currDay","totalWeeks","Math","ceil","totalDays","weeks","y","days","x","todayStyle","dayToSave","currDayState","DateUtils","isDayAfter","isSameDay","boxShadow","key","weekCompletedGroups","group","window","innerWidth","innerHeight","addEventListener","renderCalendar","isDayInRange","from","to","displayHabitOptions","Dropdown","setRef","position","top","right","bottom","join","DropdownItem","text","icon","HabitOptions","toggleEditor","remove","copyDate","HabitDayMenu","setDayState","newDayState","newDay","calcPositionFromAlignment","refPoint","alignment","finalCoords","xEnd","yEnd","calcDropdownPosition","relativeElm","middlePoint","getBoundingClientRect","scrollX","scrollY","calcMiddlePointFromDom","dropdownCoords","calcDefaultDropdownPosition","checkAlignment","defaultProps","dropdown","dayMenu","activeCoords","activeDay","dropdownClickOutside","setDayMenuRef","removeEventListener","stopPropagation","currentTarget","querySelector","cell","lastDayMenuState","App","habitStorage","HabitStorage","habitFormElement","populateState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f782dbb.chunk.js","sourcesContent":["import React from 'react';\nimport './Input.scss';\n\nfunction InputWrapper(props) {\n    return (\n        <div className={'input-group' + (props.className ? \n            ` ${props.className}` : '')}>\n            <span className=\"input-group__title\">{props.title}</span>\n            <div className=\"input-group__group\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default InputWrapper;","import React from 'react';\nimport './Select.scss';\n\nfunction Select(props) {\n    return (\n        <div className=\"select\" style={{width: props.width}}>\n            <select className={\"select__input\" \n            + (props.className ? ' ' + props.className : '')}\n            onChange={props.onChange} value={props.value}>\n                {props.children}\n            </select>\n            <i className=\"select__icon fas fa-angle-down\"></i>\n        </div>\n    );\n}\n\nexport default Select;","import anime from 'animejs/lib/anime.es';\n\nfunction slideToggle(elm, ms) {\n    if (elm.offsetHeight === 0) {\n        elm.style.height = 0;\n    }\n    elm.style.display = 'block';\n    elm.style.overflow = 'hidden';\n    const currHeight = elm.offsetHeight;\n    const targetHeight = currHeight > 0 ? 0 \n    : elm.scrollHeight + elm.clientTop * 2 ;\n\n    anime({\n        targets: elm,\n        height: targetHeight + 'px',\n        easing: 'easeOutCubic',\n        duration: ms\n    }).finished.then(() => {\n        elm.style.display = targetHeight === 0 ? 'none': '';\n        elm.style.height = '';\n        elm.style.overflow = '';\n    });\n}\n\nexport { slideToggle };","import React from 'react';\nimport './HabitForm.scss';\nimport InputWrapper from './components/InputWrapper';\nimport Select from './components/Select';\nimport { LocaleUtils } from 'react-day-picker';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport { slideToggle } from './utils/animationEffects';\n\nfunction formatDate(date, format, locale) {\n    const month = LocaleUtils.formatMonthTitle(date, locale);\n\n    return `${date.getDate()} ${month}`;\n}\n\nfunction parseDate(str, format, locale) {\n    const dateExpr = /^(\\d{1,2}) ([A-Za-z]+) (\\d{4})$/;\n    const matchedGroups = str.match(dateExpr);\n    const day = Number(matchedGroups[1]),\n          month = matchedGroups[2],\n          year = Number(matchedGroups[3]);\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    date.setDate(day)\n    date.setMonth(LocaleUtils.getMonths(locale).indexOf(month));\n    date.setFullYear(year);\n\n    return date;\n}\n\nclass HabitForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            name: '',\n            type: {\n                name: 'daily'\n            },\n            startDate: undefined,\n            duration: {\n                type: 'day',\n                value: ''\n            }\n        }\n\n        this.habitList = props.storage;\n        this.minHeight = '71px';\n        this.overlay = React.createRef();\n        this.toggle = this.toggle.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    toggle(e) {\n        if (this.state.open && e.target !== this.overlay.current) {\n            return;\n        }\n        \n        slideToggle(this.habitFormOptions, 300);\n        this.setState({ open: !this.state.open });\n    }\n\n    submit() {\n        const { name, type, startDate, duration } = this.state;\n        const options = { name, type, startDate, duration };\n        const { id, setId } = this.props;\n\n        if (id) {\n            this.habitList.update(id, options);\n            setId(null);\n        } else {\n            this.habitList.add(options);\n        }\n        this.overlay.current.click();\n        this.clearForm();\n        this.props.update();\n    }\n\n    clearForm() {\n        this.setState({\n            name: '',\n            type: {\n                name: 'daily'\n            },\n            startDate: '',\n            duration: {\n                type: 'day',\n                value: ''\n            }\n        });\n    }\n\n    populateState() {\n        const { id } = this.props;\n        const habit = this.habitList.get(id);\n        const { name, type, startDate, duration } = habit\n\n        this.setState({\n            name,\n            type,\n            startDate,\n            duration\n        });\n    }\n\n    render() {\n        return (\n            <header className=\"habit-form\" \n            data-state={this.state.open ? 'open' : 'closed'}>\n                <div className=\"habit-form__content\">\n                    <input type=\"text\" \n                    placeholder=\"Add a habit\" \n                    className=\"habit-form__title\" onFocus={this.toggle}\n                    onChange={(e) => this.setState({ name: e.target.value })} \n                    value={this.state.name} />\n                    <div className=\"habit-form__options\"\n                    ref={(options) => this.habitFormOptions = options}\n                    style={{ display: 'none' }}>\n                        <InputWrapper title=\"Select type of habit\" \n                        className=\"habit-form__type\">\n                            <Select width=\"275px\" className=\"input-group__input\" \n                            onChange={(e) => { this.setState({ type: { name: e.target.value } }) }}\n                            value={this.state.type.name}>\n                                <option value=\"daily\">Daily</option>\n                                {/* <option value=\"specific\">Specific days of the week</option>\n                                <option value=\"number\">Number of days per week</option> */}\n                            </Select>\n                        </InputWrapper>\n                        <div className=\"habit-form__date\">\n                            <InputWrapper title=\"Start Date\">\n                                <div className=\"habit-form__date__container\">\n                                    <DayPickerInput \n                                    className=\"input-group__input\"\n                                    dayPickerProps={{locale: 'en'}}\n                                    formatDate={formatDate}\n                                    parseDate={parseDate}\n                                    placeholder=\"\"\n                                    inputProps={{ readOnly: true }}\n                                    onDayChange={(date) => this.setState({ startDate: date })}\n                                    value={this.state.startDate} />\n                                    <i className=\"input-group__icon fas fa-calendar\"></i>\n                                </div>\n                            </InputWrapper>\n                            <InputWrapper title=\"Duration\">\n                                <Select width=\"110px\" className=\"input-group__input\"\n                                onChange={(e) => this.setState({ duration: { ...this.state.duration, type: e.target.value } })}\n                                value={this.state.duration.type}>\n                                    <option value=\"day\">Days</option>\n                                    <option value=\"week\">Weeks</option>\n                                </Select>\n                                <input type=\"text\" style={{width: '50px'}} \n                                className=\"number\" pattern=\"[0-9]*\"\n                                inputMode=\"numeric\"\n                                onChange={(e) => this.setState({ duration: { ...this.state.duration, value: e.target.value } })}\n                                value={this.state.duration.value} />\n                            </InputWrapper>\n                        </div>\n                        <button className=\"btn btn--white\"\n                        onClick={this.submit}>{ this.props.id ?\n                        'Modify Habit' : 'Create Habit' }</button>\n                    </div>\n                </div>\n                <div className=\"overlay\" ref={this.overlay}\n                onClick={this.toggle}></div>\n            </header>\n        );\n    }\n}\n\nexport default HabitForm;","class HabitList {\n    constructor() {\n        const habits = localStorage.getItem('habit_tracker[habits]');\n        this.habits = JSON.parse(habits) || [];\n        this.habits.forEach(habit => {\n            habit.startDate = new Date(habit.startDate);\n            if (!habit.dayStates || !(habit.dayStates instanceof Array)) {\n                habit.dayStates = [];\n            }\n\n            habit.dayStates = habit.dayStates.map(day => {\n                const { state } = day;\n\n                return { date: new Date(day.date), state };\n            });\n        });\n\n        const id = localStorage.getItem('habit_tracker[id]');\n        this.id = Number(id) || 0;\n    }\n\n    add(options) {\n        const id = this._newId();\n        const { name, startDate, duration, type } = options;\n        this._newHabitData();\n        this.habits.push({ id, name, startDate, duration, type, dayStates: [] });\n        this.save();\n    }\n\n    save() {\n        localStorage.setItem('habit_tracker[habits]', JSON.stringify(this.habits));\n        localStorage.setItem('habit_tracker[id]', this.id);\n    }\n\n    _newId() {\n        this.id += 1;\n        return this.id;\n    }\n\n    get(id) {\n        if (id) {\n            return this.habits.filter(habit => habit.id === id)[0];\n        }\n\n        return this.habits;\n    }\n\n    remove(id) {\n        this._newHabitData();\n        this.habits = this.habits.filter(habit => habit.id !== id);\n        this.save();\n    }\n\n    update(id, options) {\n        const habit = this.get(id);\n        const updatedHabit = Object.assign({}, habit, \n            { id, ...options });\n        const index = this.habits.indexOf(habit);\n        \n        this._newHabitData();\n        this.habits[index] = updatedHabit;\n        this.save();\n    }\n\n    _newHabitData() {\n        this.habits = [...this.habits];\n    }\n}\n\nexport default HabitList;","function getDay(day, startDay) {\n    const daysOfTheWeek = {\n        sunday: 0,\n        monday: 1,\n        tuesday: 2,\n        wednesday: 3,\n        thursday: 4,\n        friday: 5,\n        saturday: 6\n    }\n\n    return (day + 7 - daysOfTheWeek[startDay]) % 7;\n}\n\nfunction checkPreviousWeekCompletedDay(day, completedDays, limit) {\n    const prevDay = new Date(day.getTime());\n    prevDay.setDate(prevDay.getDate() - 1);\n    \n    return (prevDay.getTime() >= limit.getTime()) && Boolean(completedDays.find(dayState => findDay(dayState, prevDay)));\n}\n\nfunction checkNextWeekCompletedDay(day, completedDays, limit) {\n    const nextDay = new Date(day.getTime());\n    nextDay.setDate(nextDay.getDate() + 1);\n    \n    return (nextDay.getTime() <= limit.getTime()) && Boolean(completedDays.find(dayState => findDay(dayState, nextDay)));\n}\n\nfunction findDay(day, date) {\n    return day.date.getTime() === date.getTime();\n}\n\nfunction getWeekCompletedGroups(weekDates, dayStates, limits) {\n    const { startDate, endDate } = limits;\n    const completedDays = dayStates.filter(dayState => dayState.state === 'completed');\n\n    const completedGroupsList = [];\n    let currentCompletedGroup = {\n        dates: [],\n        before: false,\n        after: false,\n    };\n    weekDates.forEach((day, index) => {\n        if (completedDays.find(completedDay => findDay(completedDay, day))) {\n            currentCompletedGroup.dates.push(day);\n        } else {\n            if (currentCompletedGroup.dates.length > 0) {\n                completedGroupsList.push(currentCompletedGroup);\n                currentCompletedGroup = {\n                    dates: [],\n                    before: false,\n                    after: false,\n                };\n            }\n        }\n\n        if (index === weekDates.length - 1 && currentCompletedGroup.dates.length > 0) {\n            completedGroupsList.push(currentCompletedGroup);\n        }\n    });\n\n    const firstGroup = completedGroupsList[0];\n    if (firstGroup && getDay(firstGroup.dates[0].getDay(), 'monday') === 0) {\n        firstGroup.before = checkPreviousWeekCompletedDay(firstGroup.dates[0], completedDays, startDate);\n    }\n\n    const lastGroup = completedGroupsList[completedGroupsList.length - 1];\n    if (lastGroup && getDay(lastGroup.dates[lastGroup.dates.length - 1].getDay(), 'monday') === 6) {\n        lastGroup.after = checkNextWeekCompletedDay(lastGroup.dates[lastGroup.dates.length - 1], completedDays, endDate);\n    }\n\n    return completedGroupsList;\n}\n\nexport { \n    getWeekCompletedGroups, \n    findDay, \n    checkNextWeekCompletedDay, \n    checkPreviousWeekCompletedDay, \n    getDay \n};","import React from \"react\";\nimport { getDay } from \"./CalendarUtils\";\n\nexport default function SuccessMark(props) {\n    const { dates, before, after } = props.completedGroup;\n    const rowWidth = props.parent.current.offsetWidth;\n    const cellWidth = rowWidth / 7,\n          start = getDay(dates[0].getDay(), 'monday'),\n          coords = {\n            x: start * cellWidth,\n            y: 0\n          };\n    const MIDDLE_POINT_WIDTH = (19 * rowWidth) / 642;\n    let width = (dates.length * cellWidth) - (MIDDLE_POINT_WIDTH * 2);\n    let left = coords.x + MIDDLE_POINT_WIDTH;\n    if (before) {\n      width += cellWidth;\n      left -= cellWidth;\n    } if (after) {\n      width += cellWidth;\n    }\n    const style = {\n        left,\n        width\n    }\n\n    return (\n        <td style={style} className=\"success-day success-day--calendar\"></td>\n    );\n}","import React from 'react';\nimport './Habit.scss';\nimport { slideToggle } from '../utils/animationEffects';\nimport { DateUtils } from 'react-day-picker';\nimport { getDay, getWeekCompletedGroups, findDay } from \"./calendar/CalendarUtils\";\nimport SuccessMark from './calendar/SuccessMark';\n\nclass Habit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            windowSize: {\n                width: null,\n                height: null\n            }\n        }\n\n        this.habitToggle = this.habitToggle.bind(this);\n        this.setActiveHabit = this.setActiveHabit.bind(this);\n        this.resizeHandler = this.resizeHandler.bind(this);\n        \n        this.today = new Date();\n        this.today.setHours(0, 0, 0, 0);\n\n        this.calendarBody = React.createRef();\n    }\n\n    habitToggle() {\n        slideToggle(this.habitBody, 300);\n        this.setState({ open: !this.state.open });\n    }\n\n    setActiveHabit(e, day) {\n        this.props.displayDayMenu(e);\n        this.props.setId(this.props.habitOptions.id);\n        this.props.setDay(day);\n    }\n\n    renderCalendar() {\n        const { duration, startDate, dayStates } = this.props.habitOptions;\n        this.startDate = startDate;\n        const currDay = new Date(startDate.getTime());\n        currDay.setHours(0, 0, 0, 0);\n\n        let totalWeeks = (duration.type === 'week') ? Number(duration.value) :\n            Math.ceil(duration.value / 7);\n        const totalDays = (duration.type === 'day') ? Number(duration.value) :\n            duration.value * 7;\n\n        this.endDate = new Date(startDate.getTime());\n        this.endDate.setDate(Number(duration.type === 'day' \n            ? duration.value : totalWeeks * 7) + currDay.getDate() - 1);\n\n        if ((getDay(currDay.getDay(), 'monday') > 0) && (totalDays % 7) === 0) {\n            totalWeeks += 1;\n        }\n        \n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        const weeks = [];\n        for (let y = 0; y < totalWeeks; y++) {\n            const days = [];\n            const weekDates = [];\n            for (let x = 0; x < 7; x++) {\n                let todayStyle;\n\n                let day, dayToSave, currDayState;\n                if ((y === 0 && (getDay(currDay.getDay(), 'monday') > x)) ||\n                    DateUtils.isDayAfter(currDay, this.endDate)) {\n                    day = '';\n                } else {\n                    todayStyle = DateUtils.isSameDay(today, currDay) ? {\n                        boxShadow: '0 -6px 0 #0E9F85 inset'\n                    } : {};\n                    day = currDay.getDate();\n                    dayToSave = new Date(currDay.getTime());\n                    currDay.setDate(currDay.getDate() + 1);\n                    weekDates.push(dayToSave);\n                    currDayState = dayStates.find((dayState) => findDay(dayState, dayToSave));\n                }\n\n                days.push(\n                    <td className=\"calendar__cell calendar__cell--day\" style={todayStyle} key={x + y * 7}\n                    onClick={ day ? (e) => {\n                        this.setActiveHabit(e, dayToSave);\n                    } : null }>\n                        { (currDayState && currDayState.state === 'missed') &&\n                        <i className=\"failure-day failure-day--calendar fas fa-times\"></i> }\n                        { day }\n                    </td>\n                );\n\n            }\n            const weekCompletedGroups = getWeekCompletedGroups(weekDates, dayStates, {\n                startDate: this.startDate,\n                endDate: this.endDate\n            });\n            \n            weeks.push(\n                <tr className=\"calendar__row\" key={y}>\n                    {this.calendarBody.current && \n                        weekCompletedGroups.map(group => <SuccessMark key={group.dates[0]} completedGroup={group} parent={this.calendarBody} />)}\n                    { days }\n                </tr>\n            );\n        }\n\n        return weeks;\n    }\n\n    resizeHandler() {\n        this.setState({\n            windowSize: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        });\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resizeHandler);\n    }\n\n    componentWillUnmount() {\n        window.addEventListener('resize', this.resizeHandler);\n    }\n\n    render() {\n        const weeks = this.renderCalendar();\n        const today = DateUtils.isDayInRange(new Date(), {\n            from: this.startDate,\n            to: this.endDate\n        });\n\n        return (\n            <div className=\"habit habit--full\" \n            data-state={this.state.open ? 'open' : 'closed'}>\n                <header className=\"habit__header\" onClick={this.habitToggle}>\n                    <span className=\"habit__title\">\n                        <i className=\"habit__header__icon fas fa-angle-down\"></i>\n                        { this.props.habitOptions.name }\n                    </span>\n                    <div className=\"habit__header__action\">\n                        { \n                            !today || \n                            <button className=\"btn btn--habit habit__btn-day\"\n                            onClick={e => this.setActiveHabit(e, this.today) }>\n                                { (new Date()).getDate() }\n                            </button> \n                        }\n                        <button className=\"btn btn--habit habit__btn-options\"\n                        onClick={(e) => {\n                            this.props.displayHabitOptions(e);\n                            this.props.setId(this.props.habitOptions.id);\n                        }}>\n                            <i className=\"fas fa-ellipsis-v\"></i>\n                        </button>\n                    </div>\n                </header>\n                <div className=\"habit__body\"\n                ref={(habitBody) => { this.habitBody = habitBody; }}>\n                    <table className=\"calendar\">\n                        <thead className=\"calendar__header\">\n                            <tr className=\"calendar__row calendar__row--header\">\n                                <th className=\"calendar__cell calendar__cell--header\">Mon</th>\n                                <th className=\"calendar__cell calendar__cell--header\">Tue</th>\n                                <th className=\"calendar__cell calendar__cell--header\">Wed</th>\n                                <th className=\"calendar__cell calendar__cell--header\">Thu</th>\n                                <th className=\"calendar__cell calendar__cell--header\">Fri</th>\n                                <th className=\"calendar__cell calendar__cell--header\">Sat</th>\n                                <th className=\"calendar__cell calendar__cell--header\">Sun</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"calendar__body\" ref={this.calendarBody}>\n                            { weeks }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Habit;","import React from 'react';\nimport './dropdown.scss'\n\nexport function Dropdown({ coords, className, setRef, ...props }) {\n    const { top, right, bottom, left } = coords;\n    const style = {\n        position: 'absolute',\n        top,\n        right,\n        bottom,\n        left\n    }\n\n    return (\n        <div {...props} \n        style={style}\n        className={['dropdown', className].join(' ')}\n        ref={setRef}>\n            { props.children }\n        </div>\n    );\n}\n\nDropdown.defaultProps = {\n    coords: {\n        top: null,\n        right: null,\n        bottom: null,\n        left: null,\n    }\n}\n\nexport function DropdownItem({text, className, icon, ...props}) {\n    return (\n        <button { ...props } className={['btn btn--no-shadow dropdown__item', className].join(' ')}>\n            { icon }\n            { text }\n        </button>\n    );\n}","import React from 'react';\nimport { Dropdown, DropdownItem } from \"./Dropdown\";\n\nexport default function HabitOptions({ id, storage, update, toggleEditor, ...props }) {\n    return (\n        <Dropdown {...props}>\n            <DropdownItem text='Edit' onClick={() => {\n                toggleEditor();\n            }} />\n            <DropdownItem text='Delete' \n            onClick={() => {\n                storage.remove(id);\n                update();\n            }} />\n        </Dropdown>\n    );\n}","import React from \"react\";\nimport { Dropdown, DropdownItem } from \"./Dropdown\";\nimport { findDay } from \"../calendar/CalendarUtils\";\n\nfunction copyDate(day) {\n    return {\n        date: new Date(day.date.getTime()),\n        state: day.state\n    };\n}\n\nexport default function HabitDayMenu({ setRef, id, storage, update, day, ...props }) {\n    const habit = storage.get(id);\n    \n    function setDayState(state) {\n        const { id, dayStates, ...options } = habit;\n        const newDayState = dayStates.map(copyDate);\n        let newDay = newDayState.find(dayState => findDay(dayState, day));\n        if (!newDay) {\n            newDay = {\n                date: day\n            };\n            newDayState.push(newDay);\n        }\n        newDay.state = state;\n        storage.update(id, { dayStates: newDayState, ...options });\n        update();\n    }\n\n    return (\n        <Dropdown setRef={setRef} {...props}>\n            <DropdownItem text=\"Completed\" icon={<div className=\"habit-day__icon success-day success-day--small\"></div>}\n            onClick={() => { setDayState('completed'); }} />\n            <DropdownItem text=\"Missed\" icon={<i className=\"habit-day__icon failure-day failure-day--small fas fa-times\"></i>}\n            onClick={() => { setDayState('missed'); }} />\n        </Dropdown>\n    );\n}","function checkAlignment({ x, y, xEnd, yEnd }) {\n    const alignment = {\n        x: 'center',\n        y: 'bottom'\n    }\n\n    if (x < 10) {\n        alignment.x = 'left';\n    } else if (xEnd > window.innerWidth - 10) {\n        alignment.x = 'right';\n    }\n\n    if (yEnd > (window.innerHeight + window.scrollY) - 10) {\n        alignment.y = 'top';\n    }\n\n    return alignment;\n}\n\nfunction calcMiddlePointFromDom(elm) {\n    const coords = elm.getBoundingClientRect();\n\n    return {\n        x: (coords.left + window.scrollX) + elm.offsetWidth / 2,\n        y: (coords.top + window.scrollY) + elm.offsetHeight / 2\n    };\n}\n\nfunction calcDefaultDropdownPosition(elm, middlePoint) {\n    return calcPositionFromAlignment(elm, middlePoint, {\n        x: 'center',\n        y: 'bottom'\n    });\n}\n\nfunction calcPositionFromAlignment(elm, refPoint, alignment) {\n    const finalCoords = {};\n\n    if (alignment.x === 'left') {\n        finalCoords.x = refPoint.x - 5;\n    } else if (alignment.x === 'right') {\n        finalCoords.x = refPoint.x - elm.offsetWidth + 5;\n    } else {\n        finalCoords.x = refPoint.x - elm.offsetWidth / 2;\n    }\n\n    if (alignment.y === 'top') {\n        finalCoords.y = refPoint.y - elm.offsetHeight - 15;\n    } else {\n        finalCoords.y = refPoint.y + 15;\n    }\n\n    finalCoords.xEnd = finalCoords.x + elm.offsetWidth;\n    finalCoords.yEnd = finalCoords.y + elm.offsetHeight;\n\n    return finalCoords;\n}\n\nfunction calcDropdownPosition(target, relativeElm) {\n    const middlePoint = calcMiddlePointFromDom(relativeElm);\n    const dropdownCoords = calcDefaultDropdownPosition(target, middlePoint);\n    const alignment = checkAlignment(dropdownCoords);\n\n    return calcPositionFromAlignment(target, middlePoint, alignment);\n}\n\nexport {\n    checkAlignment,\n    calcMiddlePointFromDom,\n    calcDefaultDropdownPosition,\n    calcPositionFromAlignment,\n    calcDropdownPosition\n};","import React from \"react\";\nimport Habit from '../Habit';\nimport HabitOptions from '../dropdown/HabitOptions';\nimport HabitDayMenu from \"../dropdown/HabitDayMenu\";\nimport { calcDropdownPosition } from \"../dropdown/dropdownUtils\";\n\nclass HabitList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dropdown: false,\n            dayMenu: false,\n            activeCoords: {},\n            activeDay: null\n        }\n\n        this.dropdownClickOutside = this.dropdownClickOutside.bind(this);\n        this.displayHabitOptions = this.displayHabitOptions.bind(this);\n        this.setDayMenuRef = this.setDayMenuRef.bind(this);\n        this.displayDayMenu = this.displayDayMenu.bind(this);\n        this.setDay = this.setDay.bind(this);\n\n        this.dayMenu = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener('click', this.dropdownClickOutside);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.dropdownClickOutside)\n    }\n    \n    dropdownClickOutside() {\n        if (this.state.dropdown) {\n            this.setState({ dropdown: false });\n        } \n        \n        if (this.state.dayMenu) {\n            this.setState({ dayMenu: false });\n        }\n    }\n\n    displayHabitOptions(e) {\n        e.stopPropagation();\n        this.setState({ dropdown: true });\n        const icon = e.currentTarget.querySelector('i');\n        const x = icon.getBoundingClientRect().left + window.scrollX;\n        const y = icon.getBoundingClientRect().top + window.scrollY;\n        const top = y + icon.offsetHeight + 5;\n        const right = window.innerWidth - x - icon.offsetWidth;\n        if (top === this.state.activeCoords.top && this.state.dropdown) {\n          this.setState({ dropdown: false });\n          return;\n        }\n        this.setState({ activeCoords: { top, right } });\n    }\n\n    displayDayMenu(e) {\n        e.stopPropagation();\n        const cell = e.currentTarget;\n        const lastDayMenuState = this.state.dayMenu;\n        this.setState({ dayMenu: true }, () => {\n            const coords = calcDropdownPosition(this.dayMenu, cell);\n            if (lastDayMenuState &&\n                this.state.activeCoords.top === coords.y && \n                this.state.activeCoords.left === coords.x) {\n                this.setState({ dayMenu: false });\n            }\n            this.setState({ activeCoords: {\n                left: coords.x,\n                top: coords.y\n            } });\n        });\n    }\n\n    setDayMenuRef(elm) {\n        this.dayMenu = elm;\n    }\n\n    setDay(day) {\n        this.setState({ activeDay: day });\n    }\n\n    render() {\n        const { storage, update, id, habits, setId, toggleEditor } = this.props;\n\n        return (\n            <div className=\"habit-list\">\n                <div className=\"container\">\n                    <div className=\"row row--column\">\n                    { this.state.dropdown &&\n                    <HabitOptions \n                    storage={storage}\n                    update={update}\n                    coords={this.state.activeCoords}\n                    id={id}\n                    toggleEditor={toggleEditor} /> }\n                    { this.state.dayMenu &&\n                        <HabitDayMenu coords={this.state.activeCoords} \n                        setRef={this.setDayMenuRef} storage={storage} update={update}\n                        id={id} day={this.state.activeDay} />\n                    }\n                    {habits.map(habit => \n                    <Habit key={ habit.id } habitOptions={habit}\n                    displayHabitOptions={this.displayHabitOptions}\n                    setId={setId}\n                    displayDayMenu={this.displayDayMenu}\n                    setDay={this.setDay} />)}\n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default HabitList;","import React from 'react';\nimport './App.scss';\nimport HabitForm from './HabitForm';\nimport HabitStorage from './storage/habit';\nimport HabitList from \"./components/habit/HabitList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.habitStorage = new HabitStorage();\n    this.state = {\n      habits: this.habitStorage.get(),\n      id: null\n    }\n\n    this.update = this.update.bind(this);\n    this.setId = this.setId.bind(this);\n    this.toggleEditor = this.toggleEditor.bind(this);\n\n    this.habitFormElement = React.createRef();\n  }\n\n  update() {\n    this.setState({\n      habits: this.habitStorage.get()\n    });\n  }\n\n  setId(id) {\n    this.setState({ id });\n  }\n\n  toggleEditor(e) {\n    this.habitFormElement.current.toggle(e);\n    this.habitFormElement.current.populateState();\n  }\n\n  render() {\n    return (\n      <>\n        <HabitForm storage={this.habitStorage} update={this.update}\n        ref={this.habitFormElement} toggleEditor={this.toggleEditor}\n        id={this.state.id} setId={this.setId} />\n        <HabitList storage={this.habitStorage} update={this.update}\n        id={this.state.id} habits={this.state.habits} setId={this.setId}\n        toggleEditor={this.toggleEditor} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}